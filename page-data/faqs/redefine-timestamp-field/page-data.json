{"componentChunkName":"component---src-pages-faqs-markdown-remark-frontmatter-slug-js","path":"/faqs/redefine-timestamp-field/","result":{"data":{"markdownRemark":{"html":"<h3>Issue</h3>\n<p>Set the <code>timestamp</code> field using another extracted field.</p>\n<h3>Remediation</h3>\n<h2>Alerts: Future events</h2>\n<p>If the event is related to <code>alerts</code> or <code>archives</code> datasets, modify the ingest pipeline processors. See <a href='/faqs/filebeat-modify-ingest-pipeline'>modify ingest pipeline</a>.</p>\n<p>For example, for setting the <code>timestamp</code> field using the <code>data.aws.eventTime</code> field, add the following ingest pipeline proccessor to the pipeline:</p>\n<pre><code class=\"language-json\">{\n  \"date\": {\n    \"if\": \"ctx.data != null &#x26;&#x26; ctx.data.aws != null &#x26;&#x26; ctx.data.aws.eventTime != null\",\n    \"field\": \"data.aws.eventTime\",\n    \"target_field\": \"timestamp\",\n    \"formats\": [\"ISO8601\"],\n    \"ignore_failure\": true\n  }\n},\n</code></pre>\n<blockquote>\n<p>Notes:\nEnsure defining this processor before the processor that defines the <code>@timestamp</code> field using the <code>timestamp</code> field <a href=\"https://github.com/wazuh/wazuh/blob/v4.12.0/extensions/filebeat/7.x/wazuh-module/alerts/ingest/pipeline.json#L103-L111\">https://github.com/wazuh/wazuh/blob/v4.12.0/extensions/filebeat/7.x/wazuh-module/alerts/ingest/pipeline.json#L103-L111</a> to the <code>timestamp</code> and <code>@timestamp</code> fields has the same value.</p>\n<p>The <code>formats</code> property defines the expected format of the <code>field</code> property to convert to date, so ensure the value of the <code>field</code> property has a matching format with the <code>formats</code> property, else this could give error.</p>\n<p>The <code>ignore_failure</code> property sets as <code>true</code> will ignore any failure that will not cause the document can be dropped and not indexed into Wazuh indexer.</p>\n</blockquote>\n<h2>Existant documents</h2>\n<p>Use the Wazuh indexer API to update the <code>timestamp</code> field to a value from the field reference through the <code>POST &#x3C;index_or_index_pattern>/_update_by_query</code></p>\n<p>Take special attention to the expected format of date stored in the <code>timestamp</code> field ensuring the update of the <code>timestamp</code> field keeps the similar format.</p>\n<p>Assuming this has the following format: <code>\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\"</code>, you could update the <code>timestamp</code> fields with:</p>\n<pre><code>POST &#x3C;index_or_index_pattern>/_update_by_query\n{\n  \"script\": {\n    \"source\": \"\"\"if (ctx._source.data != null &#x26;&#x26; ctx._source.data.aws != null &#x26;&#x26; ctx._source.data.aws.eventTime != null) {\n        // Get the eventTime string from the keyword field.\n        String eventTime = ctx._source.data.aws.eventTime;\n        // Parse the eventTime string into a ZonedDateTime.\n        ZonedDateTime zdt = ZonedDateTime.parse(eventTime);\n        // Convert the ZonedDateTime to a java.util.Date.\n        Date date = Date.from(zdt.toInstant());\n        // Create a formatter with the desired pattern.\n        def sdf = new java.text.SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\");\n        // Set the formatter timezone to UTC to ensure \"+0000\" is appended.\n        sdf.setTimeZone(java.util.TimeZone.getTimeZone(\"UTC\"));\n        // Format the date and update the timestamp field.\n        ctx._source.timestamp = sdf.format(date);\n      }\"\"\",\n    \"lang\": \"painless\"\n  },\n  \"query\": {\n    \"script\": {\n      \"script\": {\n        \"source\": \"if (doc['data.aws.eventTime'].size() == 0 || doc['timestamp'].size() == 0) { return false; } return true;\",\n        \"lang\": \"painless\"\n      }\n    }\n  }\n}\n</code></pre>\n<p>If you want to compare visually the values fo <code>timestamp</code> and <code>data.aws.eventTime</code> values:</p>\n<pre><code>GET wazuh-alerts-*/_search\n{\n  \"size\": 10000,\n  \"_source\": [\"timestamp\", \"data.aws.eventTime\"],\n  \"query\": {\n    \"exists\": {\n      \"field\": \"data.aws.eventTime\"\n    }\n  }\n}\n</code></pre>\n<p>replace the placeholders:</p>\n<ul>\n<li><code>&#x3C;index_or_index_pattern></code>: index or index pattern to apply the documents update</li>\n</ul>\n<blockquote>\n<p>This query returns the first 10000 documents where the <code>data.aws.eventTime</code> field exist and returns the <code>timestamp</code> and <code>data.aws.eventTime</code> fields for the <code>wazuh-alerts-*</code> index pattern. If you know some indices where the <code>timestamp</code> and <code>data.aws.eventTime</code> fields does not match, consider to check these indices using the request commented above.</p>\n</blockquote>","frontmatter":{"date":"June 11, 2025","slug":"redefine-timestamp-field","title":"Redefine the timestamp field using another field at ingestion time","tags":["elasticsearch","timestamp","wazuh-indexer"],"version":"","description":"","author":""}}},"pageContext":{"id":"39ec2966-0f12-5134-ba86-cb9f5359f894","frontmatter__slug":"redefine-timestamp-field","__params":{"frontmatter__slug":"redefine-timestamp-field"}}},"staticQueryHashes":["1340339594"]}